/*
 * Background.cpp
 *
 *  Created on: 29.08.2019
 *      Author: Trait
 */

#include "Background.h"
#include "xil_io.h"
#include "../definitions.h"

#define HEIGHT 100
/*
enum tileType {None, Grass, Highway, Water, Trainway};
uint16_t bg_type1 = HIGHWAY_TILE;
uint16_t bg_type2 = GRASS_TILE;
uint16_t bg_type3 = HIGHWAY_TILE;
uint16_t bg_type4 = HIGHWAY_TILE;
uint16_t bg_type5 = WATER_TILE;
uint16_t bg_type6 = TRAINWAY_TILE;
uint16_t bg_type7 = GRASS_TILE;
uint16_t bg_nxt = TRAINWAY_TILE;
*/

Background::Background() {
	this->current_transition_offset = 56;
	this->desired_transition_offset = 56;
	this->bg_tile1 = Highway;
	this->bg_tile2 = Grass;
	this->bg_tile3 = Highway;
	this->bg_tile4 = Highway;
	this->bg_tile5 = Water;
	this->bg_tile6 = Trainway;
	this->bg_tile7 = Grass;
	this->bg_nxt = Trainway;
}

void Background::setupTileBackground(uint16_t bg_type, uint16_t pos_y, uint8_t index){
	uint8_t module_id = 4;
	uint32_t obj_data;
	bg_type &= 0x7FF; //11bits
	pos_y &= 0x3FF; //10bits
	index &= 0x3F; //6bits
	obj_data = (module_id<<27) | (index<<21) | (bg_type<<10) | pos_y;
	Xil_Out32(VGA_CONTROL_BASEADDR + REG3_OFFSET, obj_data);
}

void Background::draw() {
	if(isTransitionOn){
		setupTileBackground(bg_nxt, current_transition_offset, 0);
		setupTileBackground(bg_tile1, current_transition_offset + HEIGHT,1);
		setupTileBackground(bg_tile2, current_transition_offset + 2*HEIGHT,2);
		setupTileBackground(bg_tile3, current_transition_offset + 3*HEIGHT,3);
		setupTileBackground(bg_tile4, current_transition_offset + 4*HEIGHT,4);
		setupTileBackground(bg_tile5, current_transition_offset + 5*HEIGHT,5);
		setupTileBackground(bg_tile6, current_transition_offset + 6*HEIGHT,6);
		setupTileBackground(bg_tile7, current_transition_offset + 7*HEIGHT,7);
	}
}

void Background::update() {
	if(current_transition_offset < desired_transition_offset) { //To change if not working as intended
		current_transition_offset++;
		isTransitionOn = true;
	}
	else {
		current_transition_offset = desired_transition_offset = 56;
		isTransitionOn = false;
	}
}

uint8_t Background::getDesiredTransitionOffset() const {
	return desired_transition_offset;
}

void Background::setDesiredTransitionOffset(uint8_t desiredTransitionOffset) {
	desired_transition_offset = desiredTransitionOffset;
}
